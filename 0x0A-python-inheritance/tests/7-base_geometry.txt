::::::::::::
Funcion
::::::::::::

Importacion del modulo:
::::::::::::::::::::::::::::::::::::

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

:::::::::::::::::::::::::::::::::::: 

Pruebas:
:::::::::::::

1 - Se supone que debe Funcionar

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("", 12)

>>> bg.integer_validator("", (12))

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.area(22)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given

2 - Se supone que debe generar un tipo de error TypeError

>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
...
ValueError: my_int must be greater than 0

3 - Se supone que debe generar un tipo de error TypeError

>>> bg.integer_validator("my_int", -10)
Traceback (most recent call last):
...
ValueError: my_int must be greater than 0

4- Se supone que debe generar un tipo de error TypeError

>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

5 - Se supone que debe generar un tipo de error TypeError

>>> bg.integer_validator("my_int", 12, 12)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

6 - Se supone que debe generar un tipo de error TypeError

>>> bg.integer_validator("my_int", 12.3)
Traceback (most recent call last):
...
TypeError: my_int must be an integer

7 - Se supone que debe generar un tipo de error TypeError

>>> bg.integer_validator("my_int", "pepe")
Traceback (most recent call last):
...
TypeError: my_int must be an integer

8 - Se supone que debe generar un tipo de error TypeError

>>> bg.integer_validator("my_int", False)
Traceback (most recent call last):
...
TypeError: my_int must be an integer

>>> bg.integer_validator("my_int", True)
Traceback (most recent call last):
...
TypeError: my_int must be an integer

9 - Se supone que debe generar un tipo de error TypeError

>>> bg.integer_validator("my_int", None)
Traceback (most recent call last):
...
TypeError: my_int must be an integer

10 - Se supone que debe generar un tipo de error TypeError

>>> bg.integer_validator("my_int", [0, 1, 2])
Traceback (most recent call last):
...
TypeError: my_int must be an integer

11 - Se supone que debe generar un tipo de error TypeError

>>> bg.integer_validator("my_int", {0, 1, 2})
Traceback (most recent call last):
...
TypeError: my_int must be an integer

12 - Se supone que debe generar un tipo de error TypeError

>>> bg.integer_validator("my_int", (0, 1, 2))
Traceback (most recent call last):
...
TypeError: my_int must be an integer
